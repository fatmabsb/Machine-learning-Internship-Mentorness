import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
import os

# Define the file paths
train_file_path = '/Users/fatmazohra/Desktop/everything inside/Machine Learning Internship/Task3_Disease Prediction/Train_data.csv'
test_file_path = '/Users/fatmazohra/Desktop/everything inside/Machine Learning Internship/Task3_Disease Prediction/test_data.csv'
output_file_path = '/Users/fatmazohra/Desktop/everything inside/Machine Learning Internship/Task3_Disease Prediction/test_predictions.csv'

# Load the data
train_data = pd.read_csv(train_file_path)
test_data = pd.read_csv(test_file_path)

# Display the first few rows of the train data
print(train_data.head())
# Display the first few rows of the test data
print(test_data.head())

# Check for missing values
print(train_data.isnull().sum())

# Separate features and target variable
X = train_data.drop(columns=['Disease'])
y = train_data['Disease']

# Split the train data for training and validation
X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize the features (fit on X_train, transform on X_train, X_val, and X_test)
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_val_scaled = scaler.transform(X_val)

# Ensure that the test data has the same feature columns as the train data
X_test = test_data[X.columns]
X_test_scaled = scaler.transform(X_test)

# Initialize the model
model = RandomForestClassifier(random_state=42)

# Train the model
model.fit(X_train_scaled, y_train)

# Predict on validation set
y_val_pred = model.predict(X_val_scaled)

# Evaluate the model
accuracy = accuracy_score(y_val, y_val_pred)
precision = precision_score(y_val, y_val_pred, average='weighted')
recall = recall_score(y_val, y_val_pred, average='weighted')
f1 = f1_score(y_val, y_val_pred, average='weighted')

print(f'Accuracy: {accuracy:.2f}')
print(f'Precision: {precision:.2f}')
print(f'Recall: {recall:.2f}')
print(f'F1-Score: {f1:.2f}')

# Predict on test data
test_predictions = model.predict(X_test_scaled)

# Save the predictions to a CSV file
output = pd.DataFrame({'ID': test_data.index, 'Disease': test_predictions})
output.to_csv(output_file_path, index=False)
print(f"Test predictions saved to '{output_file_path}'")

# Print the current working directory to find where the file is saved
print("Current Working Directory:", os.getcwd())
